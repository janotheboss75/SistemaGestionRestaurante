package GUI;

import entidades.Ingrediente;
import enums.UnidadDeMedida;
import excepciones.NegocioException;
import interfaces.IIngredienteBO;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manejadoresDeObjetoNegocio.ManejadorObjetosNegocio;
import utils.IconCellRenderer;

/**
 *
 * @author janot
 */
public class VentanaIngredientes extends javax.swing.JFrame {
    private Control control = new Control();
    protected IIngredienteBO ingredienteBO;
    private List<Ingrediente> ingredientes = new ArrayList<>();
    
    /**
     * Creates new form VentanaIngredientes
     */
    public VentanaIngredientes() {
        ingredienteBO = ManejadorObjetosNegocio.crearIngredienteBO();
        initComponents();
        asignarIngredientesALista();
        cargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelRegresar = new javax.swing.JLabel();
        jLabelIngredientes = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelInventarioDeIngredientes = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelIconFiltro = new javax.swing.JLabel();
        jLabelIngredienteNuevo2 = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jLabelBuscar = new javax.swing.JLabel();
        jLabelIngredienteNuevo1 = new javax.swing.JLabel();
        jLabelIconIngredienteNuevo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableIngredientes = new javax.swing.JTable();
        jLabelFiltrar2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelRegresar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/arrow-small-left.png"))); // NOI18N
        jLabelRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegresarMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabelIngredientes.setFont(new java.awt.Font("Product Sans Infanity", 1, 66)); // NOI18N
        jLabelIngredientes.setForeground(new java.awt.Color(0, 0, 0));
        jLabelIngredientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIngredientes.setText("Ingredientes");
        jPanel1.add(jLabelIngredientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(69, 71, 75));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelInventarioDeIngredientes.setFont(new java.awt.Font("Product Sans Infanity", 1, 24)); // NOI18N
        jLabelInventarioDeIngredientes.setForeground(new java.awt.Color(255, 255, 255));
        jLabelInventarioDeIngredientes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelInventarioDeIngredientes.setText("Inventario de Ingredientes");
        jPanel2.add(jLabelInventarioDeIngredientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 320, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 920, 40));

        jPanel3.setBackground(new java.awt.Color(217, 217, 217));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelIconFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/filter.png"))); // NOI18N
        jPanel3.add(jLabelIconFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabelIngredienteNuevo2.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelIngredienteNuevo2.setForeground(new java.awt.Color(0, 0, 0));
        jLabelIngredienteNuevo2.setText("Nuevo");
        jPanel3.add(jLabelIngredienteNuevo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, -1, -1));

        jTextFieldBuscar.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyTyped(evt);
            }
        });
        jPanel3.add(jTextFieldBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 150, 30));

        jLabelBuscar.setFont(new java.awt.Font("Product Sans Infanity", 0, 18)); // NOI18N
        jLabelBuscar.setForeground(new java.awt.Color(0, 0, 0));
        jLabelBuscar.setText("Buscar:");
        jPanel3.add(jLabelBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabelIngredienteNuevo1.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelIngredienteNuevo1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelIngredienteNuevo1.setText("Ingrediente");
        jPanel3.add(jLabelIngredienteNuevo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, -1, -1));

        jLabelIconIngredienteNuevo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconIngredienteNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jLabelIconIngredienteNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelIconIngredienteNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelIconIngredienteNuevoMouseClicked(evt);
            }
        });
        jPanel3.add(jLabelIconIngredienteNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, 70));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 920, 70));

        jTableIngredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "UnidadDeMedida", "Stock", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableIngredientes.setRowHeight(30);
        jTableIngredientes.setRowSelectionAllowed(false);
        jTableIngredientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableIngredientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableIngredientes);
        if (jTableIngredientes.getColumnModel().getColumnCount() > 0) {
            jTableIngredientes.getColumnModel().getColumn(0).setResizable(false);
            jTableIngredientes.getColumnModel().getColumn(1).setResizable(false);
            jTableIngredientes.getColumnModel().getColumn(2).setResizable(false);
            jTableIngredientes.getColumnModel().getColumn(3).setResizable(false);
            jTableIngredientes.getColumnModel().getColumn(4).setResizable(false);
            jTableIngredientes.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 920, 370));

        jLabelFiltrar2.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelFiltrar2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFiltrar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFiltrar2.setText("Filtrar");
        jLabelFiltrar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(jLabelFiltrar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 920, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegresarMouseClicked
         control.mostrarPantallaMenuAdmin();
         control.cerrarPantalla(this);
    }//GEN-LAST:event_jLabelRegresarMouseClicked

    private void jTextFieldBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyTyped
        String busqueda = jTextFieldBuscar.getText();
        buscador(busqueda);
        cargarDatosTabla();
        
    }//GEN-LAST:event_jTextFieldBuscarKeyTyped

    private void jLabelIconIngredienteNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelIconIngredienteNuevoMouseClicked
        control.mostrarPantallaIngredienteNuevo(this, rootPaneCheckingEnabled);
    }//GEN-LAST:event_jLabelIconIngredienteNuevoMouseClicked

    private void jTableIngredientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableIngredientesMouseClicked
        subirStock(evt);
        bajarStock(evt);
        asignarIngredientesALista();
        cargarDatosTabla();
    }//GEN-LAST:event_jTableIngredientesMouseClicked

    protected void asignarIngredientesALista(){
        try {
            ingredientes = ingredienteBO.consultarTodosLosIngredientes();
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    
    protected void cargarDatosTabla(){    
        Icon iconoSubirStock = new ImageIcon(getClass().getResource("/imagenes/incrementar.png"));
        Icon iconoBajarStock = new ImageIcon(getClass().getResource("/imagenes/decrementar.png"));
        DefaultTableModel model = (DefaultTableModel) jTableIngredientes.getModel();
        model.setRowCount(0);
        for (Ingrediente ingrediente : ingredientes) {
            model.addRow(new Object[]{
                ingrediente.getId(),
                ingrediente.getNombre(),
                ingrediente.getUnidadMedida(),
                ingrediente.getStock()
            });
        }
        
        jTableIngredientes.setModel(model);    
        
        jTableIngredientes.setModel(model);
        jTableIngredientes.getColumnModel().getColumn(0).setMinWidth(0);
        jTableIngredientes.getColumnModel().getColumn(0).setMaxWidth(0);
        jTableIngredientes.getColumnModel().getColumn(0).setWidth(0);
        
        jTableIngredientes.getColumnModel().getColumn(4).setMinWidth(40);
        jTableIngredientes.getColumnModel().getColumn(4).setMaxWidth(40);
        jTableIngredientes.getColumnModel().getColumn(4).setWidth(40);
        
        jTableIngredientes.getColumnModel().getColumn(5).setMinWidth(40);
        jTableIngredientes.getColumnModel().getColumn(5).setMaxWidth(40);
        jTableIngredientes.getColumnModel().getColumn(5).setWidth(40);
        
        jTableIngredientes.getColumnModel().getColumn(4).setCellRenderer(new IconCellRenderer(iconoSubirStock));
        jTableIngredientes.getColumnModel().getColumn(5).setCellRenderer(new IconCellRenderer(iconoBajarStock));
    }
    
    public void buscador(String busqueda){
        try {
            ingredientes = ingredienteBO.buscadorComandas(busqueda);
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    public void subirStock(MouseEvent evt){
        int fila = jTableIngredientes.rowAtPoint(evt.getPoint());
        int columna = jTableIngredientes.columnAtPoint(evt.getPoint());
        
        if (columna == 4) { 
            Object id = jTableIngredientes.getModel().getValueAt(fila, 0);
            
            try {
                Ingrediente ingrediente = ingredienteBO.consultarIngredientePorId((Long) id);
                control.mostrarPantallaIncrementarStockIngrediente(this, rootPaneCheckingEnabled, ingrediente);
                
            } catch (NegocioException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }
    
    public void bajarStock(MouseEvent evt){
        int fila = jTableIngredientes.rowAtPoint(evt.getPoint());
        int columna = jTableIngredientes.columnAtPoint(evt.getPoint());
        
        if (columna == 5) { 
            Object id = jTableIngredientes.getModel().getValueAt(fila, 0);
            try {
                Ingrediente ingrediente = ingredienteBO.consultarIngredientePorId((Long) id);
                control.mostrarPantallaDecrementarStockIngrediente(this, rootPaneCheckingEnabled, ingrediente);
            } catch (NegocioException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelFiltrar2;
    private javax.swing.JLabel jLabelIconFiltro;
    private javax.swing.JLabel jLabelIconIngredienteNuevo;
    private javax.swing.JLabel jLabelIngredienteNuevo1;
    private javax.swing.JLabel jLabelIngredienteNuevo2;
    private javax.swing.JLabel jLabelIngredientes;
    private javax.swing.JLabel jLabelInventarioDeIngredientes;
    private javax.swing.JLabel jLabelRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableIngredientes;
    private javax.swing.JTextField jTextFieldBuscar;
    // End of variables declaration//GEN-END:variables
}
